// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DB.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Campaign", b =>
                {
                    b.Property<int>("CampaignID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserProfileUserId")
                        .HasColumnType("int");

                    b.HasKey("CampaignID");

                    b.HasIndex("UserProfileUserId");

                    b.ToTable("Campaign");
                });

            modelBuilder.Entity("Model.Message", b =>
                {
                    b.Property<int>("MessageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("UserProfileUserId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("UserProfileUserId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Model.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampaignID")
                        .HasColumnType("int");

                    b.Property<int?>("MessagesMessageId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignID");

                    b.HasIndex("MessagesMessageId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("Model.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Model.Campaign", b =>
                {
                    b.HasOne("Model.User", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUserId");
                });

            modelBuilder.Entity("Model.Message", b =>
                {
                    b.HasOne("Model.User", "UserProfile")
                        .WithMany()
                        .HasForeignKey("UserProfileUserId");
                });

            modelBuilder.Entity("Model.Tasks", b =>
                {
                    b.HasOne("Model.Campaign", null)
                        .WithMany("Tasks")
                        .HasForeignKey("CampaignID");

                    b.HasOne("Model.Message", "Messages")
                        .WithMany()
                        .HasForeignKey("MessagesMessageId");
                });
#pragma warning restore 612, 618
        }
    }
}
